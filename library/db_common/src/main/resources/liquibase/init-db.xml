<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.9.xsd">

    <!-- Create tables -->
    <changeSet id="init-01" author="developer">
        <sql>
            CREATE TABLE IF NOT EXISTS users (
                                                 id BIGINT AUTO_INCREMENT PRIMARY KEY,
                                                 username VARCHAR(50) NOT NULL UNIQUE,
                email VARCHAR(100) NOT NULL UNIQUE,
                password VARCHAR(255) NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                );

            CREATE TABLE IF NOT EXISTS roles (
                                                 id BIGINT AUTO_INCREMENT PRIMARY KEY,
                                                 name VARCHAR(20) NOT NULL UNIQUE
                );

            CREATE TABLE IF NOT EXISTS user_roles (
                                                      user_id BIGINT NOT NULL,
                                                      role_id BIGINT NOT NULL,
                                                      PRIMARY KEY (user_id, role_id),
                FOREIGN KEY (user_id) REFERENCES users(id),
                FOREIGN KEY (role_id) REFERENCES roles(id)
                );
        </sql>
    </changeSet>

    <!-- Insert initial data -->
    <changeSet id="init-02" author="developer">
        <sql>
            INSERT INTO roles (name) VALUES
                                         ('ROLE_USER'),
                                         ('ROLE_ADMIN'),
                                         ('ROLE_MODERATOR')
                ON DUPLICATE KEY UPDATE name=name;

            -- Insert admin user with password: 'admin123' (you should change this in production)
            INSERT INTO users (username, email, password)
            VALUES ('admin', 'admin@example.com', '$2a$10$XXXX...')
                ON DUPLICATE KEY UPDATE username=username;

            -- Assign admin role to admin user
            INSERT INTO user_roles (user_id, role_id)
            SELECT u.id, r.id
            FROM users u
                     CROSS JOIN roles r
            WHERE u.username = 'admin'
              AND r.name = 'ROLE_ADMIN'
                ON DUPLICATE KEY UPDATE user_id=user_id;
        </sql>
    </changeSet>

    <!-- Create indexes -->
    <changeSet id="init-03" author="developer">
        <sql>
            CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);
            CREATE INDEX IF NOT EXISTS idx_users_username ON users(username);
        </sql>
    </changeSet>

    <!-- Rollback section -->
    <changeSet id="init-04" author="developer" runOnChange="true">
        <rollback>
            DROP TABLE IF EXISTS user_roles;
            DROP TABLE IF EXISTS roles;
            DROP TABLE IF EXISTS users;
        </rollback>
    </changeSet>

</databaseChangeLog>
